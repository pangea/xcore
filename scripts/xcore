#!/usr/bin/env node

// Author: Christopher Rankin
// Copyright: 2014 Pangea Real Estate

var _						= require('underscore'),
		async				= require('async'),
		fs					= require('fs'),
		path				=	require('path'),
		args				= require('minimist')(process.argv.slice(2)),
		buildClient	= require('./lib/xcore/client').buildClient,
		logger			= require('./lib/xcore/logger').logger,
		xTest				= require('./lib/xcore/test');

// Handle the command line arguments.
_.each(args._, function(arg, idx, argz) {
  switch(arg) {

    // Print usage information
  case 'help':
    console.log("Help & usage information will go here.");
    process.exit(0);
    
    // Print the xCore version
  case 'version':
    // Grab the version number from the package.json file.
    var packageJson = fs.readFileSync(path.join(__dirname, "../package.json"));
    console.log("Version: " + JSON.parse(packageJson).version);
    process.exit(0);
    
  // Build the client, database or both.
  case 'build':
    toBuild = argz[idx+1];
    
    switch(toBuild) {
      case 'all':
				// buildDatabase();
				// buildClient();
        break;
      case 'client':
        buildClient();
        break;
      case 'database':
			logger.info("logger should work.");
      //  buildDatabase({
			//		backup: args.backup,
			//		config: args.config,
			//		database: args.database,
			//		extension: args.extension,
			//		initialize: args.initialize,
			//		keepSql: args.keepsql,
			//		queryDirect: args.querydirect,
			//		unregister: args.unregisgter,
			//		wipeViews: args.wipeviews
			//	}, function (err, res) {
			//		console.log(err || res || "Success!");
			//		process.exit(err ? 1 : 0);
			//	});
        break;
			default:
				console.log("// TODO: Print build usage");
				process.exit(0);
    }
		break;

  case 'test':
    toTest = argz[idx+1];
    
    if (toTest == 'all') {
      xTest.testAll();
    } else {
      xTest.testExtension(toTest);
    }    
		break;

  }

});
